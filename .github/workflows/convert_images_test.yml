name: convert_images_test
on: workflow_dispatch
permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  convertimages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: PDF fix
        run: sudo mv /etc/ImageMagick-6/policy.xml /etc/ImageMagick-6/policy.xml.off && sudo apt-get update && sudo apt-get install -y ghostscript-x
      - name: poppler
        run: sudo apt-get install -y poppler-utils
      - name: pip install
        run: pip3 install iiif pdf2image Pillow iiif-prezi git+https://github.com/giacomomarchioro/pyIIIFpres
      - name: runscript
        run: python3 -c "exec(\"from iiif.static import IIIFStatic\nfrom IIIFpres import iiifpapi3\nfrom PIL import Image\nimport os\nfrom pdf2image import convert_from_path\nfrom iiif_prezi.factory import ManifestFactory\n\nfiles = [('images/AnabelRussoMadghoutTypeSpecimen2.png', 'Anabel Russo-Madghout Type Specimen 2'), ('images/AnabelRussoMadghoutTypeSpecimen.png', 'Anabel Russo-Madghout Type Specimen'), ('images/AndyLiSynthwaveTypeSpecimen.pdf', 'Andy Li-Synthwave-Type-Specimen'), ('images/AndyLiSynthwaveTypeSpecimen.png', 'Andy Li-SynthwaveTypeSpecimen'), ('images/AshleyWillistypespecimenalbumcover.png', 'Ashley Willis-type specimen album cover'), ('images/AshleyWillisTypespecimenattribute.png', 'Ashley Willis-Type specimen attribute'), ('images/BhavanaVeeravalliBVTypeSpecimentGD417Book1.png', 'Bhavana Veeravalli-BV-TypeSpeciment-GD417-Book1'), ('images/BhavanaVeeravalliBVTypeSpecimentGD417Book2.png', 'Bhavana Veeravalli-BV-TypeSpeciment-GD417-Book2'), ('images/BhavanaVeeravalliBVTypeSpecimentGD417.png', 'Bhavana Veeravalli-BV-TypeSpeciment-GD417'), ('images/convert.py', 'convert'), ('images/DeniLewisDesignspecimen2.png', 'Deni Lewis-Design specimen 2'), ('images/DeniLewisDesignspecimen.png', 'Deni Lewis-Design specimen'), ('images/GabrielaHernandezVargasGD417P2TypeSpecimenMagazineMockup.png', 'Gabriela Hernandez Vargas-GD417-P2-TypeSpecimen-Magazine-Mockup'), ('images/GabrielaHernandezVargasGD417P2TypeSpecimenMagazine.png', 'Gabriela Hernandez Vargas-GD417-P2-TypeSpecimen-Magazine'), ('images/GabrielaHernandezVargasGD417P2TypeSpecimen.pdf', 'Gabriela Hernandez Vargas-GD417-P2-TypeSpecimen'), ('images/IanBaileyDragoncover.png', 'Ian Bailey-Dragoncover'), ('images/IanBaileyDragonmockup.png', 'Ian Bailey-Dragonmockup'), ('images/JeremyLewisJeremyLewisjlewisspecimentravel0.jpg', 'Jeremy Lewis-Jeremy Lewis - jlewis-specimen-travel-0'), ('images/JeremyLewisJeremyLewisjlewisspecimentravel1.jpg', 'Jeremy Lewis-Jeremy Lewis - jlewis-specimen-travel-1'), ('images/JeremyLewisJeremyLewisjlewisspecimentravel2.jpg', 'Jeremy Lewis-Jeremy Lewis - jlewis-specimen-travel-2'), ('images/JeremyLewisJeremyLewisjlewisspecimentravel3.jpg', 'Jeremy Lewis-Jeremy Lewis - jlewis-specimen-travel-3'), ('images/JeremyLewisjlewisspecimentravel.pdf', 'Jeremy Lewis-jlewis-specimen-travel'), ('images/JordiStephensonCaughtBook.jpg', 'Jordi Stephenson-Caught-Book'), ('images/JoshGarrettGalaTypeSpecimens.pdf', 'Josh Garrett-Gala - Type Specimens'), ('images/KatherineRyanHardCoverTextbookRadian.png', 'Katherine Ryan-HardCoverTextbookRadian'), ('images/KatherineRyanNewsHeadline.png', 'Katherine Ryan-NewsHeadline'), ('images/KatherineRyanperfumeAd1.png', 'Katherine Ryan-perfumeAd1'), ('images/KatherineRyanperfumeAd2.png', 'Katherine Ryan-perfumeAd2'), ('images/KatherineRyanradian1.png', 'Katherine Ryan-radian1'), ('images/KatherineRyanradian2.png', 'Katherine Ryan-radian2'), ('images/KeyaShanbhagKeyaShanbhagposter.jpg', 'Keya Shanbhag-Keya Shanbhag - poster'), ('images/KeyaShanbhagKeyaShanbhagposter.png', 'Keya Shanbhag-Keya Shanbhag - poster'), ('images/KeyaShanbhagKeyaShanbhagpostermockup.jpg', 'Keya Shanbhag-Keya Shanbhag - postermockup'), ('images/KeyaShanbhagKeyaShanbhagpostermockup.png', 'Keya Shanbhag-Keya Shanbhag - postermockup'), ('images/MeganBTypeSpecimenMegan.pdf', 'Megan B-Type-Specimen-Megan'), ('images/MiaBiehlerRoyalBookcovermockup.jpg', 'Mia Biehler-Royal Book cover mockup'), ('images/MiaBiehlerRoyalBookCover.png', 'Mia Biehler-Royal Book Cover'), ('images/MiaBiehlerSpecimenofRheannasType.pdf', 'Mia Biehler-Specimen of Rheannas Type '), ('images/NoahPatakyBusStopAd.png', 'Noah Pataky-Bus Stop Ad'), ('images/NoahPatakyPoster.png', 'Noah Pataky-Poster'), ('images/NoahPatakyTypeSpecimen.png', 'Noah Pataky-Type-Specimen'), ('images/QuynhVoQVoTypeSpecimentGD417Poster.png', 'Quynh Vo-QVo-TypeSpeciment-GD417-Poster'), ('images/QuynhVoQVoTypeSpecimentGD417PosterMockup.png', 'Quynh Vo-QVo-TypeSpeciment-GD417-PosterMockup'), ('images/RheannaMurrayBlobularArtExhibitPosterMockup.jpg', 'Rheanna Murray-Blobular Art Exhibit Poster Mockup'), ('images/RheannaMurrayBlobularArtExhibitPoster.pdf', 'Rheanna Murray-Blobular Art Exhibit Poster'), ('images/RheannaMurrayBlobularLabelMockup.pdf', 'Rheanna Murray-Blobular Label Mockup'), ('images/RheannaMurrayBlobularLabelBusinessCard.pdf', 'Rheanna Murray-Blobular LabelBusiness Card'), ('images/RheannaMurrayBlobularShirtMockup.pdf', 'Rheanna Murray-Blobular Shirt Mockup'), ('images/SenaCelikCosmic.jpg', 'Sena Celik-Cosmic'), ('images/ShariesaTypeSpecimenMOCKUP.pdf', 'Shariesa )-Type Specimen MOCKUP'), ('images/Shariesatypespecimen.png', 'Shariesa )-type specimen'), ('images/SophiaChunnSophiaChunnTypeSpecimenChunnS.jpg', 'Sophia Chunn-Sophia Chunn - TypeSpecimenChunnS'), ('images/SophiaChunnSophiaChunnTypeSpecimenMockupChunnS.png', 'Sophia Chunn-Sophia Chunn - TypeSpecimenMockupChunnS'), ('images/TaylorBrooksFontSpecimenMockUp.png', 'Taylor Brooks-Font Specimen Mock-Up'), ('images/TaylorBrooksFontSpecimen.png', 'Taylor Brooks-Font Specimen'), ('images/ZeinaOsmanTypespecimen2.png', 'Zeina Osman-Type specimen 2'), ('images/ZeinaOsmanTypespecimen.png', 'Zeina Osman-Type specimen')]\nmanifestlabel = '''test'''\ndst = os.path.join('img/derivatives/iiif/', 'test') + '/'\nbaseurl = os.path.join('https://dnoneill.github.io/annonatate/', dst)\ndata = []\nfor idx, filedict in enumerate(files):\n    file = filedict[0]\n    filepath,ext = file.rsplit('.', 1)\n    if ext == 'pdf':\n        images = convert_from_path(file)\n        for i in range(len(images)):\n            imagefilename = filepath + '-' + str(i) +'.jpg'\n            images[i].save(imagefilename, 'JPEG')\n            files.append([imagefilename, filedict[1]])\n        del files[idx]\n        os.remove(file)\n    elif ext != 'jpg' and ext != 'jpeg':\n        os.system('convert {} {}.jpg'.format(file, filepath))\n        files.append(('%s.jpg'%filepath, filedict[1]))\n        del files[idx]\n        os.remove(file)\nfor filedict in files:\n    file = filedict[0]\n    filepath,ext = file.rsplit('.', 1)\n    filename = os.path.basename(filepath)\n    if ext != 'jpg' and ext != 'jpeg':\n        os.system('convert {} {}.jpg'.format(file, filepath))\n    sg = IIIFStatic(prefix=baseurl, dst=dst)\n    sggenerate = sg.generate(file)\n    img = Image.open(file)\n    data.append((filename, img.width, img.height, os.path.join(baseurl, filename),'/full/full/0/default.jpg', filedict[1]))\n    iiiffulldir = os.path.join(dst, filename, 'full/full')\n    if not os.path.isdir(iiiffulldir):\n        os.mkdir(iiiffulldir)\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n        os.mkdir(iiiffulldir)\n    else:\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n    os.system('mv {} {}'.format(file, os.path.join(iiiffulldir, 'default.jpg')))\niiifpapi3.BASE_URL = baseurl\nmanifest = iiifpapi3.Manifest()\nmanifest.set_id(extendbase_url='manifest.json')\nmanifest.add_label('en',manifestlabel)\nmanifest.add_behavior('paged')\ndescription = manifest.add_summary('en', '''''')\nmanifest.set_viewingDirection('left-to-right')\nrights = ''''''\nif rights:\n    try:\n        manifest.set_rights(rights)\n    except:\n        manifest.add_metadata('rights', rights, 'en', 'en')\n\ndata = tuple(data)\nfor idx,d in enumerate(data):\n    idx+=1\n    canvas = manifest.add_canvas_to_items()\n    canvas.set_id(extendbase_url='canvas/test-%s'%idx)\n    canvas.set_height(d[2])\n    canvas.set_width(d[1])\n    canvas.add_label('en', d[5])\n    filteredallfiles = [f for f in os.listdir(os.path.join(dst, d[0], 'full')) if f != 'full' and int(f.split(',')[0]) > 70]\n    filteredallfiles.sort()\n    size = filteredallfiles[0] if len(filteredallfiles) > 0 else '80,'\n    thumbnail = canvas.add_thumbnail()\n    thumbnail.set_id('{}/full/{}/0/default.jpg'.format(d[3], size))\n    annopage = canvas.add_annotationpage_to_items()\n    annopage.set_id(extendbase_url='page/p%s/1' %idx)\n    annotation = annopage.add_annotation_to_items(target=canvas.id)\n    annotation.set_id(extendbase_url='annotation/p%s-image'%str(idx).zfill(4))\n    annotation.set_motivation('painting')\n    annotation.body.set_id(''.join(d[3:5]))\n    annotation.body.set_type('Image')\n    annotation.body.set_format('image/jpeg')\n    annotation.body.set_width(d[1])\n    annotation.body.set_height(d[2])\n    s = annotation.body.add_service()\n    s.set_id(d[3])\n    s.set_type('ImageService2')\n    s.set_profile('level1')\n\nmanifest.json_save(os.path.join(dst, 'manifest.json'))\n\")"
      - name: add page jekyll to manifest
        run: echo -e "---\n---\n$(cat img/derivatives/iiif/test/manifest.json)" > img/derivatives/iiif/test/manifest.json
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git config pull.rebase false
          git add -A
          git commit -m "Create test manifest and IIIF derivatives" -a || echo "No changes to commit"
      - name: pull
        run: git pull origin main
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main 
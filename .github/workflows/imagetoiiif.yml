name: test
on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: install
        run: pip3 install iiif
      - name: install Pillow
        run: pip3 install Pillow
      - name: runscript
        run: python3 -c "from iiif.static import IIIFStatic;from IIIFpres import iiifpapi3;from PIL import Image;import os;;files = [['vagrantissue.jpg']];manifestlabel = 'placeholder';dst = os.path.join("img/derivatives/iiif/", manifestlabel) + '/';baseurl = os.path.join(https://dnoneill.github.io/annonatate/, dst);data = [];for file in files:;    filename,ext = file.rsplit('.', 1);    os.sytem('convert {} {}.jpg'.format(file, filename));    sg = IIIFStatic(prefix=baseurl, dst=dst);    sggenerate = sg.generate(file);    img = Image.open(file);    data.append((file, img.width, img.height, baseurl,"full/full/0/default.jpg"));    iiiffulldir = os.path.join(dst, file.rsplit('.', 1)[0], 'full/full');    os.mkdir(iiiffulldir);    iiiffulldir = os.path.join(iiiffulldir, '0');    os.mkdir(iiiffulldir);    os.system('mv {} {}'.format(file, os.path.join(iiiffulldir, 'default.jpg')));iiifpapi3.BASE_URL = baseurl;manifest = iiifpapi3.Manifest();manifest.set_id(extendbase_url="manifest.json");manifest.add_label("en",manifestlabel);manifest.add_behavior("paged");data = tuple(data);for idx,d in enumerate(data):;    idx+=1 ;    print('find me');    print(d);    print(idx);    canvas = manifest.add_canvas_to_items();    canvas.set_id(extendbase_url="canvas/p%s"%idx) # in this case we use the base url;    canvas.set_height(d[2]);    canvas.set_width(d[1]);    canvas.add_label("en",d[0]);    annopage = canvas.add_annotationpage_to_items();    annopage.set_id(extendbase_url="page/p%s/1" %idx);    annotation = annopage.add_annotation_to_items(target=canvas.id);    annotation.set_id(extendbase_url="annotation/p%s-image"%str(idx).zfill(4));    annotation.set_motivation("painting");    annotation.body.set_id("".join(d[3:]));    annotation.body.set_type("Image");    annotation.body.set_format("image/jpeg");    annotation.body.set_width(d[1]);    annotation.body.set_height(d[2]);    s = annotation.body.add_service();    s.set_id(d[3]);    s.set_type("ImageService3");    s.set_profile("level1");;manifest.json_save(os.path.join(dst, "manifest.json"))"
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "update data" -a
      - name: pull
        run: git pull origin main
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main 
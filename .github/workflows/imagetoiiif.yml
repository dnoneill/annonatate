name: convert images
on: workflow_dispatch

jobs:
  convertimages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: install
        run: pip3 install iiif
      - name: install Pillow
        run: pip3 install Pillow
      - name: install IIIFpres
        run: pip3 install git+https://github.com/giacomomarchioro/pyIIIFpres
      - name: runscript
        run: python3 -c "exec(\"from iiif.static import IIIFStatic\nfrom IIIFpres import iiifpapi3\nfrom PIL import Image\nimport os\n\nfiles = ['images/ScreenShot20210928at20747PM.jpg']\nmanifestlabel = 'test'\ndst = os.path.join('img/derivatives/iiif/', 'test') + '/'\nbaseurl = os.path.join('https://dnoneill.github.io/annonatate/', dst)\ndata = []\nfor file in files:\n    filepath,ext = file.rsplit('.', 1)\n    filename = os.path.basename(filepath)\n    os.system('convert {} {}.jpg'.format(file, filepath))\n    sg = IIIFStatic(prefix=baseurl, dst=dst)\n    sggenerate = sg.generate(file)\n    img = Image.open(file)\n    data.append((filename, img.width, img.height, os.path.join(baseurl, filename),'/full/full/0/default.jpg'))\n    iiiffulldir = os.path.join(dst, filename, 'full/full')\n    if not os.path.isdir(iiiffulldir):\n        os.mkdir(iiiffulldir)\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n        os.mkdir(iiiffulldir)\n    else:\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n    os.system('mv {} {}'.format(file, os.path.join(iiiffulldir, 'default.jpg')))\niiifpapi3.BASE_URL = baseurl\nmanifest = iiifpapi3.Manifest()\nmanifest.set_id(extendbase_url='manifest.json')\nmanifest.add_label('en',manifestlabel)\nmanifest.add_behavior('paged')\ndescription = manifest.add_summary('en', '')\nthumbnail = manifest.add_thumbnail()\nthumbnail.set_id(data[0][3]+ '/full/full/80,/default.jpg')\nmanifest.set_viewingDirection('left-to-right')\nrights = ''\nif rights:\n    try:\n        manifest.set_rights(rights)\n    except:\n        manifest.add_metadata('rights', rights, 'en', 'en')\n\ndata = tuple(data)\nfor idx,d in enumerate(data):\n    idx+=1\n    canvas = manifest.add_canvas_to_items()\n    canvas.set_id(extendbase_url='canvas/p%s'%idx)\n    canvas.set_height(d[2])\n    canvas.set_width(d[1])\n    canvas.add_label('en',d[0])\n    annopage = canvas.add_annotationpage_to_items()\n    annopage.set_id(extendbase_url='page/p%s/1' %idx)\n    annotation = annopage.add_annotation_to_items(target=canvas.id)\n    annotation.set_id(extendbase_url='annotation/p%s-image'%str(idx).zfill(4))\n    annotation.set_motivation('painting')\n    annotation.body.set_id(''.join(d[3:]))\n    annotation.body.set_type('Image')\n    annotation.body.set_format('image/jpeg')\n    annotation.body.set_width(d[1])\n    annotation.body.set_height(d[2])\n    s = annotation.body.add_service()\n    s.set_id(os.path.join(d[3], 'info.json'))\n    s.set_type('ImageService2')\n    s.set_profile('level1')\n\nmanifest.json_save(os.path.join(dst, 'manifest.json'))\")"
      - name: add page jekyll to manifest
        run: printf '%s\n%s\n' "---%s\n---%s\n" "$(cat 'img/derivatives/iiif/test/manifest.json')" > "img/derivatives/iiif/test/manifest.json"
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "update data" -a
      - name: pull
        run: git pull origin main
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main 
